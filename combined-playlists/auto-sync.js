(async()=>{for(;!Spicetify.React||!Spicetify.ReactDOM;)await new Promise(t=>setTimeout(t,10));a=Object.defineProperty,e=Object.getOwnPropertyDescriptor,i=Object.getOwnPropertyNames,r=Object.prototype.hasOwnProperty,((t,e)=>{for(var i in e)a(t,i,{get:e[i],enumerable:!0})})(t={},{synchronizeCombinedPlaylists:()=>g}),o="combined-playlists",s={name:Spicetify.Platform?.Translations["shared.library.entity-row.liked-songs.title"],collaborative:!1,description:"",external_urls:{spotify:""},href:"",id:"liked-songs-facade",images:[],owner:{display_name:"",external_urls:{spotify:""},href:"",id:"",type:"user",uri:""},public:!1,snapshot_id:"",tracks:{href:"",total:0},type:"playlist",uri:"spotify:playlist:liked-songs-facade"},n=new Map,l={autoSync:!0},(async()=>{for(;!Spicetify?.Platform||!Spicetify?.CosmosAsync;)await new Promise(t=>setTimeout(t,100));(JSON.parse(Spicetify.LocalStorage.get("combined-playlists-settings")??"null")||l).autoSync&&g()})(),t=t;var a,e,i,r,t,o,s,n,l,c=a({},"__esModule",{value:!0}),y=t,f=void 0,p=void 0;if(y&&"object"==typeof y||"function"==typeof y)for(let t of i(y))r.call(c,t)||t===f||a(c,t,{get:()=>y[t],enumerable:!(p=e(y,t))||p.enumerable});async function u(t,i,e=!1){t=await Promise.all(t.map(async t=>t.id===s.id?d((await Spicetify.Platform.LibraryAPI.getTracks({limit:99999})).items):m(t.uri))).then(t=>Array.from(new Set(t.flat())));let a=await m(i.uri);var r,t=t.filter(t=>!a.includes(t)),o=(r=100,t.reduce((t,e,i)=>{i=Math.floor(i/r);return t[i]||(t[i]=[]),t[i].push(e),t},[]));0<t.length&&e&&Spicetify.showNotification(`Auto-syncing ${t.length} missing tracks to playlist `+i.name),await Promise.all(o.map(async e=>{return t=i.uri,Spicetify.Platform.PlaylistAPI.add(t,e,{}).then(()=>{var t=n.get(i.uri)||[];n.set(i.uri,[...t,...e])});var t})),0<t.length?(o=e?`Auto-synced ${t.length} missing tracks to playlist ${i.name} 🔥`:`Added ${t.length} tracks to playlist: `+i.name,Spicetify.showNotification(o)):e||Spicetify.showNotification(i.name+" is already up to date! 🎉")}async function m(t){var e=n.get(t);return e?Promise.resolve(e):(e=d((await Spicetify.Platform.PlaylistAPI.getContents(t)).items),n.set(t,e),e)}function d(t){return t.filter(t=>t.uri?.startsWith("spotify:track:")&&t.isPlayable).map(t=>t.uri)}function g(){var t=JSON.parse(Spicetify.LocalStorage.get(o))??[];return Promise.all(t.map(({sources:t,target:e})=>u(t,e,!0))).catch(t=>{console.error("An error ocurred while auto-syncing playlists",t),Spicetify.showNotification("An error ocurred while auto-syncing playlists",!0)}).finally(()=>n.clear())}})();